root = [1,2,3,4,5]
Output: 3
 Explanation: The distance between the leftmost node 4 and the rightmost node 3 is 3, since this is the longest horizontal distance of the binary tree, hence its diameter.


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int diameterOfBinaryTree(TreeNode root) {
        int[] diameter = new int[1];
        height(root,diameter);
        return diameter[0];
    }
    private int height(TreeNode root, int[] diameter){
        if(root == null){
            return 0;
        }
        int leftsubtree = height(root.left, diameter);
        int rightsubtree = height(root.right , diameter);
        diameter[0] = Math.max(diameter[0] , leftsubtree + rightsubtree);
        return Math.max(leftsubtree , rightsubtree) + 1;
    }
}
